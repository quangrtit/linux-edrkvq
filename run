run test:
    docker build -t ubuntu-2404-user:latest .
    docker run -it \
      -v ~/deb_test_files:/mnt/data \
      ubuntu-2404-user:latest bash

grep EACCES /usr/include/asm-generic/errno-base.h
grep EACCES /usr/include/asm-generic/errno.h
cat /usr/include/asm-generic/errno-base.h
cat /usr/include/asm-generic/errno.h
grep -rnw '/usr/include' -e 'O_TRUNC'


test case:
protect file:  
  1	./attack_test	write
  2	./attack_test	modify
  3	./attack_test	delete
  4	./attack_test	rename
  5	./attack_test	recreate
  6	./attack_test	mmap
  7	./attack_test	openwrite
  8	./attack_test	chmod
test perfomance:
  ps aux | grep SentinelEDR | grep -v grep
  pidstat -p pid 1

sudo docker cp /home/ubuntu/lib/vdt-ajiant-edr/build/SentinelEDR-1.0.0-linux-x86_64.deb ff902d59b87e:/root/tmp
cmake .. -DDEFAULT_POLICY_FILE_PATH=self_defense_policy.json && make 

trace log: 
  sudo bpftool prog tracelog
  
sudo LD_PRELOAD=/home/ubuntu/lib/vdt-ajiant-edr/test_environment/attack_test/LD_PRELOAD/hack.so ./SentinelEDR
echo -n "stop_service" | nc 192.168.159.128 8080
sudo ls -l /proc/4311/fd | grep socket
ps -T -p 1234

cp SentinelEDR-1.0.0-linux-x86_64.deb /home/ubuntu/lib/vdt-ajiant-edr/test_environment/build_test && cp install.sh /home/ubuntu/lib/vdt-ajiant-edr/test_environment/build_test && cp uninstall.sh /home/ubuntu/lib/vdt-ajiant-edr/test_environment/build_test
cp SentinelEDR-1.0.0-linux-x86_64.deb /home/quang/myLib/vdt-ajiant-edr/test_environment/build_test && cp install.sh /home/quang/myLib/vdt-ajiant-edr/test_environment/build_test && cp uninstall.sh /home/quang/myLib/vdt-ajiant-edr/test_environment/build_test

git clone --recurse-submodules git@github.com:quangrtit/vdt-ajiant-edr.git
sudo apt install libssl-dev
sudo apt-get install liblmdb-dev


dd if=/dev/zero of=test_drive.img bs=1M count=100
mkfs.ext4 test_drive.img
sudo mkdir /mnt/test_mount
sudo mount test_drive.img /mnt/test_mount
sudo bash -c 'echo "#!/bin/bash" > /mnt/test_mount/test_script.sh'
sudo chmod +x /mnt/test_mount/test_script.sh
sudo /mnt/test_mount/test_script.sh
sudo umount /mnt/test_mount
sudo rmdir /mnt/test_mount
sudo rm test_drive.img

1
sudo bpftool map show
journalctl -u SentinelEDR -f

sudo apt-get install libpsl-dev
git submodule add https://github.com/curl/curl.git curl
git submodule update --init --recursive
git clone https://github.com/madler/zlib.git
cd zlib
cmake -DBUILD_SHARED_LIBS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON .
make -j$(nproc)
sudo make install

fsck -y /dev/sda2

sudo wget https://sourceforge.net/projects/boost/files/boost/1.83.0/boost_1_83_0.tar.gz/download -O boost_1_83_0.tar.gz && \
    tar -zxvf boost_1_83_0.tar.gz && \
    cd boost_1_83_0 && \
    ./bootstrap.sh --prefix=/usr/local --with-libraries=system,thread && \
    ./b2 link=static runtime-link=static -j$(nproc) install && \
    cd .. && rm -rf boost_1_83_0